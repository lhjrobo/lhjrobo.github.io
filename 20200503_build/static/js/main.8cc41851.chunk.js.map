{"version":3,"sources":["img/logo2.png","img/Yam_greetings.PNG","store.js","title.js","page2.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Trigger","React","createContext","Title","name","id","className","Component","TitleLogo","src","title_logo","alt","TitleDescription","toggle","useContext","x","useSpring","config","duration","easing","easings","div","style","transform","interpolate","Page2","Greetings","GreetingsJapanese","o","opacity","GreetingsEnglish","YamSketch","Yam_greetings","Button","useState","setToggle","tension","onMouseEnter","e","onMouseLeave","onMouseDownCapture","onMouseUpCapture","href","App","props","state","handleWheel","bind","event","deltaY","Scroll","scrollTo","delay","smooth","this","setState","Provider","value","onWheel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8cc41851.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo2.40b7a4ab.png\";","module.exports = __webpack_public_path__ + \"static/media/Yam_greetings.8066dada.PNG\";","import React from \"react\";\r\nconst Trigger = React.createContext(false);\r\nexport default Trigger;\r\n","import React, { Component, useContext } from \"react\";\r\nimport { useSpring, animated, interpolate } from \"react-spring\";\r\nimport \"./title.css\";\r\nimport Trigger from \"./store\";\r\nimport * as easings from \"d3-ease\";\r\nimport title_logo from \"./img/logo2.png\";\r\n\r\nclass Title extends Component {\r\n  render() {\r\n    return (\r\n      <div name=\"Title\" id=\"title\" className=\"title_margin\">\r\n        <div className=\"title\">\r\n          <TitleLogo />\r\n          <TitleDescription />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass TitleLogo extends Component {\r\n  render() {\r\n    return <img src={title_logo} className=\"logo\" id=\"logo\" alt=\"title_logo\" />;\r\n  }\r\n}\r\nconst TitleDescription = () => {\r\n  const toggle = useContext(Trigger);\r\n  const { x } = useSpring({\r\n    config: { duration: 1600, easing: easings.easeCubic },\r\n    x: toggle ? -400 : 0,\r\n  });\r\n  return (\r\n    <animated.div\r\n      className=\"title_description\"\r\n      id=\"title_description\"\r\n      style={{\r\n        transform: interpolate([x], (x) => `translate3d(0,${x}px,0)`),\r\n      }}\r\n    >\r\n      <span className=\"title_date\">2020.**.**... - **.**...</span>\r\n      <span className=\"title_whoweare_japanese\">東京大学　山中俊治研究室</span>\r\n      <span className=\"title_whoweare_english\">\r\n        UTokyo Prototyping & Design Laboratory\r\n      </span>\r\n    </animated.div>\r\n  );\r\n};\r\nexport default Title;\r\n","import React, { Component, useState, useContext } from \"react\";\r\nimport { useSpring, animated, interpolate } from \"react-spring\";\r\nimport Trigger from \"./store\";\r\nimport * as easings from \"d3-ease\";\r\nimport Yam_greetings from \"./img/Yam_greetings.PNG\";\r\n\r\nimport \"./page2.css\";\r\nclass Page2 extends Component {\r\n  render() {\r\n    return (\r\n      <div name=\"Page2\" id=\"page2\" className=\"page2_margin\">\r\n        <div className=\"page2\">\r\n          <Greetings />\r\n          <YamSketch />\r\n          <Button />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst Greetings = () => {\r\n  return (\r\n    <div className=\"greetings\">\r\n      <GreetingsJapanese />\r\n      <GreetingsEnglish />\r\n    </div>\r\n  );\r\n};\r\nconst GreetingsJapanese = () => {\r\n  const toggle = useContext(Trigger);\r\n  const { x, o } = useSpring({\r\n    config: { duration: 1600, easing: easings.easeCubic },\r\n    x: toggle ? 0 : 200,\r\n    o: toggle ? 1 : 0,\r\n  });\r\n  return (\r\n    <animated.div\r\n      className=\"greetings_japanese\"\r\n      style={{\r\n        transform: interpolate([x], (x) => `translate3d(0,${x}px,0)`),\r\n        opacity: interpolate([o], (o) => `${o}`),\r\n      }}\r\n    >\r\n      <h1 className=\"greetings_japanese_title\">開催にあたり</h1>\r\n      <div className=\"greetings_japanese_contents\">\r\n        <p>\r\n          言葉を交えると新しい発見があります。\r\n          話すことによってイメージの輪郭が急にはっきりすることもあります。\r\n          アイデアは、人との関わりの中で少しずつ、時には劇的に進展します。\r\n          山中研究室においても、会話や議論はプロジェクト進行の中核になります。\r\n          常に、より広い視野、客観的な意見、新たなビジョンを求めて繰り返される会話。\r\n          重要なのは話者の多様性です。\r\n          今回の展示では、来場いただいた皆さんと、研究メンバーが会話することを目指しました。\r\n          展示されたプロトタイプには、私たちのビジョンや価値観が込められています。\r\n          気になることがあったら、そこにいるメンバーに遠慮なく問いかけてください。\r\n          そして、あなたが思ったこと、感じたこと、考えたことを聞かせてください。\r\n          限られた時間ではありますが、一緒に未来をドライブできれば幸いです。\r\n        </p>\r\n      </div>\r\n    </animated.div>\r\n  );\r\n};\r\nconst GreetingsEnglish = () => {\r\n  const toggle = useContext(Trigger);\r\n  const { x, o } = useSpring({\r\n    config: { duration: 1600, easing: easings.easeCubic },\r\n    x: toggle ? 0 : 300,\r\n    o: toggle ? 1 : 0,\r\n  });\r\n  return (\r\n    <animated.div\r\n      className=\"greetings_english\"\r\n      style={{\r\n        transform: interpolate([x], (x) => `translate3d(0,${x}px,0)`),\r\n        opacity: interpolate([o], (o) => `${o}`),\r\n      }}\r\n    >\r\n      <h1 className=\"greetings_english_title\">-Introduction-</h1>\r\n      <div className=\"greetings_english_contents\">\r\n        <p>\r\n          Discovery often occurs during a “dialogue”. It also helps us to\r\n          clarify the vague image of our concepts. Those ideas evolve steadily,\r\n          sometimes dramatically with our engagement with others. Likewise,\r\n          conversation and discussion are also critical for running our\r\n          projects. A broader viewpoint, objective opinion and iteration of\r\n          dialogue, pursuing new vision are always required. What is most\r\n          important is the diversity of ideas. Our goal in this exhibition is to\r\n          open a dialogue between you and us. The displayed prototypes are made\r\n          upon our visions and values. If you have any questions or insights you\r\n          would like to share with us, please feel free to ask. We would be very\r\n          glad to hear your thoughts and opinions. Enjoy the short journey with\r\n          our vision to the future.\r\n        </p>\r\n      </div>\r\n    </animated.div>\r\n  );\r\n};\r\nconst YamSketch = () => {\r\n  const toggle = useContext(Trigger);\r\n  const { x, o } = useSpring({\r\n    config: { duration: 1600, easing: easings.easeCubic },\r\n    x: toggle ? 0 : 100,\r\n    o: toggle ? 1 : 0,\r\n  });\r\n  return (\r\n    <animated.div\r\n      className=\"sketch_yam\"\r\n      style={{\r\n        transform: interpolate([x], (x) => `translate3d(0,${x}px,0)`),\r\n        opacity: interpolate([o], (o) => `${o}`),\r\n      }}\r\n    >\r\n      <img\r\n        src={Yam_greetings}\r\n        className=\"sketch_yam_image\"\r\n        alt=\"Yam_greetings\"\r\n      />\r\n    </animated.div>\r\n  );\r\n};\r\nconst Button = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n  const { x } = useSpring({\r\n    config: { tension: 500 },\r\n    x: toggle ? 1.05 : 1,\r\n  });\r\n  return (\r\n    <animated.div\r\n      className=\"button_gallery\"\r\n      style={{\r\n        transform: interpolate([x], (x) => `scale(${x})`),\r\n      }}\r\n      onMouseEnter={(e) => setToggle(true)}\r\n      onMouseLeave={(e) => setToggle(false)}\r\n      onMouseDownCapture={(e) => setToggle(false)}\r\n      onMouseUpCapture={(e) => setToggle(true)}\r\n    >\r\n      <a className=\"button_gallery_box\" href=\"\">\r\n        Go To Gallery\r\n      </a>\r\n    </animated.div>\r\n  );\r\n};\r\nexport default Page2;\r\n","import React, { Component } from \"react\";\nimport * as Scroll from \"react-scroll\";\nimport \"./App.css\";\nimport Title from \"./title\";\nimport Page2 from \"./page2\";\nimport Trigger from \"./store\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { toggle: false };\n    this.handleWheel = this.handleWheel.bind(this);\n  }\n  handleWheel(event) {\n    //event.preventDefault();\n    if (event.deltaY > 0) {\n      Scroll.scroller.scrollTo(\"Page2\", {\n        duration: 1600,\n        delay: 0,\n        smooth: \"easeInOutQuart\",\n      });\n      this.setState({ toggle: true });\n    } else {\n      Scroll.scroller.scrollTo(\"Title\", {\n        duration: 1600,\n        delay: 0,\n        smooth: \"easeInOutQuart\",\n      });\n      this.setState({ toggle: false });\n    }\n  }\n  render() {\n    return (\n      <Trigger.Provider value={this.state.toggle}>\n        <div onWheel={this.handleWheel}>\n          <Title />\n          <Page2 />\n        </div>\n      </Trigger.Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}